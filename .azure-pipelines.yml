trigger:
  - main

pool:
  name: Default
  demands:
    - agent.name -equals automation-9999

variables:
  TF_ROOT: './Terraform/bpg_terraform-clone-vm'

stages:
  - stage: Terraform
    jobs:
      - job: terraform_plan_apply
        variables:
          # If you use a variable group for SSH_PRIVATE_KEY, reference it here:
          - group: Private_Variables
        steps:
          - task: DownloadSecureFile@1
            name: tfvarsFile
            inputs:
              secureFile: secrets.auto.tfvars

          - script: |
              echo "Moving tfvars file into Terraform folder..."
              mv "$(tfvarsFile.secureFilePath)" "$(TF_ROOT)/secrets.auto.tfvars"
            displayName: 'Move secrets.auto.tfvars to TF directory'

          # --- START SSH AGENT SETUP USING SECRET VARIABLE ---
          - script: |
              echo "Starting ssh-agent..."
              eval "$(ssh-agent -s)"
              echo "$SSH_PRIVATE_KEY" | ssh-add -
            displayName: 'Start ssh-agent and add SSH private key'
          # --- END SSH AGENT SETUP ---

          - script: |
              echo "Initializing Terraform..."
              terraform -chdir=$(TF_ROOT) init
            displayName: 'Terraform Init'

          - script: |
              echo "Planning Terraform changes..."
              terraform -chdir=$(TF_ROOT) plan -var-file="secrets.auto.tfvars"
            displayName: 'Terraform Plan'

          - script: |
              echo "Applying Terraform changes..."
              terraform -chdir=$(TF_ROOT) apply -auto-approve -input=false -var-file="secrets.auto.tfvars"
            displayName: 'Terraform Apply'
