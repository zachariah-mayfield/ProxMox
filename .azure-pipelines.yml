trigger:
  - main

pool:
  name: Default
  demands:
    - agent.name -equals automation-9999

variables:
  TF_ROOT: './Terraform/bpg_terraform-clone-vm'

stages:
  - stage: Terraform
    jobs:
      - job: terraform_plan_apply
        variables:
          - group: Private_Variables  # Keep if you use any other secrets here
        steps:
          - task: DownloadSecureFile@1
            name: tfvarsFile
            inputs:
              secureFile: secrets.auto.tfvars

          - script: |
              echo "Moving tfvars file into Terraform folder..."
              mv "$(tfvarsFile.secureFilePath)" "$(TF_ROOT)/secrets.auto.tfvars"
            displayName: 'Move secrets.auto.tfvars to TF directory'

          # --- START SSH AGENT SETUP USING SECURE FILE ---
          - task: DownloadSecureFile@1
            name: sshKeyFile
            inputs:
              secureFile: id_rsa_pem  # ðŸ‘ˆ exact name of your uploaded file  # <-- Name of your uploaded private key file in Secure Files

          - script: |
              echo "Starting ssh-agent..."
              echo "Showing private key snippet:"
              head -n 20 $(sshKeyFile.secureFilePath)

              echo "Setting permissions:"
              chmod 600 $(sshKeyFile.secureFilePath)
              ls -l $(sshKeyFile.secureFilePath)

              echo "Starting ssh-agent and adding key:"
              eval $(ssh-agent -s)
              ssh-add $(sshKeyFile.secureFilePath)

              echo "Testing SSH connection:"
              ssh -o StrictHostKeyChecking=no -i $(sshKeyFile.secureFilePath) root@192.168.1.250 echo "SSH connection successful"
            displayName: 'Start ssh-agent and add SSH private key and DEBUG SSH connection' 
          # --- END SSH AGENT SETUP ---

          - script: |
              echo "Initializing Terraform..."
              terraform -chdir=$(TF_ROOT) init
            displayName: 'Terraform Init'

          - script: |
              echo "Planning Terraform changes..."
              terraform -chdir=$(TF_ROOT) plan -var-file="secrets.auto.tfvars"
            displayName: 'Terraform Plan'

          - script: |
              echo "Applying Terraform changes..."
              terraform -chdir=$(TF_ROOT) apply -auto-approve -input=false -var-file="secrets.auto.tfvars"
            displayName: 'Terraform Apply'
